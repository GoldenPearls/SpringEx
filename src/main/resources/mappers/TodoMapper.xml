<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multicampus.springex.mapper.TodoMapper">

    <!--어노테이션이 아니라 xml 파일로 sql 작성-->
    <!--TodoMapperjava에 있는 메소드 명이랑 select id가 같아야 함-->
    <select id="getTime" resultType="string">
        select now()
    </select>
    <!--TodoMapper.java에 있는 메소드 명이랑 inesert id가 같아야 함-->
    <!--어노테이션 @Select("select * form tb1_board") 이렇게 써도 되는데 코드 수정하고 다시 빌드 하는 등의 유지 보수성이 떨어져서 따로 분리작성-->
    <insert id="insert">
        /*prepareStatment에서 쓴 ?대신 인파라미터를 #으로 사용*/
        /*SQL 작성 시 반드시 ; 없이 작성*/
        insert into tb1_todo (title, dueDate, writer) values (#{title}, #{dueDate}, #{writer})
    </insert>

    <!--리턴 타입을 정해줌.. 왜? 모든 데이터를 가져올 것이기 때문에 resultset형태로 반환해주는데 그게 모든 데이터가
     있으니 row 값들이 다 넘어오는데 한줄 단위로 묶어 담아야 하니
    하나의 TodoVO로 넘어와서 한줄 단위로 묶어줌-->
    <select id="selectAll" resultType="com.multicampus.springex.domain.TodoVO">
        select * from tb1_todo order by tno desc
    </select>

    <select id="selectOne" resultType="com.multicampus.springex.domain.TodoVO">
        select * from tb1_todo where tno =#{tno}
    </select>

    <delete id="delete">
        DELETE FROM tb1_todo WHERE tno = #{tno}
    </delete>

    <update id="update">
        update tb1_todo set title=#{title}, dueDate=#{dueDate}, finished=#{finished} where tno=#{tno}
    </update>
</mapper>

